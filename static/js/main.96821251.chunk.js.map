{"version":3,"sources":["Components/Header.js","axios.js","Components/Card.js","Components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","Card","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","style","backgroundImage","imgUrl","name","Buttons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAuBeA,G,MAjBA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAEvC,qBAAKA,UAAU,cACdG,IAAI,8HACJC,IAAI,KAEL,cAACH,EAAA,EAAD,UACA,cAAC,IAAD,CAAUC,SAAS,QAAQF,UAAU,qB,yCCblCK,E,OAFEC,EAAMC,OAAO,CAACC,QAAS,8C,iBC8CzBC,G,MA3CF,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACRC,EADQ,KACAC,EADA,KAmBf,OAhBAC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACIR,EAAMS,IAAI,UADd,OACRC,EADQ,OAEdJ,EAAUI,EAAIC,MAFA,2CAAH,qDAIfC,KACD,IAWC,qBAAKlB,UAAU,aAAf,SACI,qBAAKA,UAAU,iBAAf,SACKW,EAAOQ,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACIpB,UAAU,QAEVqB,aAAc,CAAC,KAAM,QAHzB,SAOI,qBACIC,MAAO,CAACC,gBAAgB,QAAD,OAAUH,EAAOI,OAAjB,OACvBxB,UAAU,OAFd,SAII,6BAAKoB,EAAOK,UATXL,EAAOK,e,6FCGrBC,EAxBC,WACZ,OACI,qBAAK1B,UAAU,YAAf,SACA,sBAAKA,UAAU,UAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,gBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,cAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,cAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,eAAtB,SACI,cAAC,IAAD,CAAeE,SAAS,YAE5B,cAACD,EAAA,EAAD,CAAYD,UAAU,eAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,kBCXvByB,G,MAVH,WACV,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCES4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96821251.chunk.js","sourcesContent":["import React from 'react';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"header\">\r\n            <IconButton>\r\n            <PersonIcon fontSize=\"large\" className=\"person_icon\" />\r\n            </IconButton>\r\n            <img className=\"header_logo\"\r\n             src=\"https://icon2.cleanpng.com/20180617/wji/kisspng-tinder-logo-computer-icons-tinder-5b2617bbc3b1d9.2328705015292230998016.jpg\"\r\n             alt=\"\"\r\n             />\r\n            <IconButton>\r\n            <ChatIcon fontSize=\"large\" className=\"chat_icon\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst instance = axios.create({baseURL: \"https://backend-tinderclone.herokuapp.com\"});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react';\r\nimport axios from '../axios';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './card.css';\r\n\r\nconst Card = () => {\r\n    const [people, setPeople] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const req = await axios.get('/cards');\r\n            setPeople(req.data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n   /* const outOfFrame = (name) => {\r\n        console.log(name + \" left the screen\");\r\n    }\r\n\r\n    const swiped = (dir, removeName) => {\r\n        console.log(\"removing \" + removeName);\r\n    }*/\r\n    \r\n    return(\r\n        <div className=\"personCard\">\r\n            <div className=\"card_container\">\r\n                {people.map((person) => (\r\n                    <TinderCard\r\n                        className=\"swipe\"\r\n                        key={person.name}\r\n                        preventSwipe={[\"up\", \"down\"]}\r\n                       /* onSwipe={(dir) => swiped(dir, person.name)}\r\n                onCardLeftScreen={() => outOfFrame(person.name)}*/\r\n                    >\r\n                        <div \r\n                            style={{backgroundImage: `url(\"${person.imgUrl}\")`}}\r\n                            className=\"card\"\r\n                        >\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './buttons.css';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavouriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst Buttons = () => {\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"buttons\">\r\n            <IconButton className=\"button_repeat\">\r\n                <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"button_left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"button_star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"button_right\">\r\n                <FavouriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"button_flash\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import Header from './Components/Header';\nimport Card from './Components/Card';\nimport Buttons from './Components/Buttons';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Card />\n      <Buttons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}